使用：
template<class Type>
class Stack
{
	...
}
template <class Type>
Stack<Type>::Stack()
{
	...
}
Stack<Type>  Stack<Type>::***
Stack<Type> 当作数据类型一样使用
在int main中：
Stack<std::string> st;
 进行数据类型的确定；

模板头：
template<class T,int n>
假设有下面的声明：
ArrayTP<double,12>eggweights;
编译器将使用double代替T，12代替n
递归使用模板：
ArrayTP<ArrayTP<int,5>,10>twodee;
使得twodee是一个包含10个元素的数组，每个元素都是一个包含5个int元素的数组
类似创建了一个二维数组：int twodee[10][5]